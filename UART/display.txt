library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity conv_displays is
Port ( clk : in std_logic;
	rst : in std_logic;
	DATA_IN : std_logic_vector (7 downto 0);
	an3 : out std_logic;
	an2 : out std_logic;
	an1 : out std_logic;
	an0 : out std_logic;
	algarismo : out std_logic_vector(7 downto 0));
end conv_displays;

architecture Behavioral of conv_displays is
	signal cont_clock : integer range 0 to 499999;
	signal num_alg : std_logic_vector(1 downto 0);
	signal DATA_IN_AUX : std_logic_vector (3 downto 0);
	
begin
co: process (clk, rst)
begin
	if rst = '1' then
		cont_clock <= 0;
	elsif clk'event and clk = '1' then
		if cont_clock = 499999 then
			cont_clock <= 0;
			num_alg <= "00";
		else
			--if cont_clock = 124999 then
				--num_alg <= "11";
			if cont_clock = 249999 then
				num_alg <= "01";
			--elsif cont_clock = 374999 then
				--num_alg <= "11";
			end if;
			cont_clock <= cont_clock + 1;
		end if;
	end if;
end process;
an : process(clk, rst)
begin
	if rst = '1' then
		an3 <= '0';
		an2 <= '0';
		an1 <= '0';
		an0 <= '0';
		DATA_IN_AUX(3 downto 0) <= "0000";
		algarismo(7) <= '1';
	elsif clk'event and clk = '1' then
		if num_alg = "00" then
		an3 <= '1';
		an2 <= '1';
		an1 <= '1';
		an0 <= '0';
		DATA_IN_AUX(3) <= DATA_IN(3);
		DATA_IN_AUX(2) <= DATA_IN(2);
		DATA_IN_AUX(1) <= DATA_IN(1);
		DATA_IN_AUX(0) <= DATA_IN(0);
		algarismo(7) <= '1';
		elsif num_alg = "01" then
			an3 <= '1';
			an2 <= '1';
			an1 <= '0';
			an0 <= '1';
			DATA_IN_AUX(3) <= DATA_IN(7);
			DATA_IN_AUX(2) <= DATA_IN(6);
			DATA_IN_AUX(1) <= DATA_IN(5);
			DATA_IN_AUX(0) <= DATA_IN(4);
			algarismo(7) <= '1';
			--elsif num_alg = "11" then
			--an3 <= '0';
			--an2 <= '1';
			--an1 <= '1';
			--an0 <= '1';
			--algarismo(7) <= '1';
		end if;
	end if;
	end process;
al : process(clk, rst)
begin
	if rst = '1' then
		algarismo(6 downto 0) <= "0000001";
	elsif clk'event and clk = '1' then
		case DATA_IN_AUX is
		when "0000" => algarismo(6 downto 0) <= "0000001";
		when "0001" => algarismo(6 downto 0) <= "1001111";
		when "0010" => algarismo(6 downto 0) <= "0010010";
		when "0011" => algarismo(6 downto 0) <= "0000110";
		when "0100" => algarismo(6 downto 0) <= "1001100";
		when "0101" => algarismo(6 downto 0) <= "0100100";
		when "0110" => algarismo(6 downto 0) <= "0100000";
		when "0111"	=> algarismo(6 downto 0) <= "0001111";
		when "1000" => algarismo(6 downto 0) <= "0000000";
		when "1001" => algarismo(6 downto 0) <= "0000100";
		when "1010" => algarismo(6 downto 0) <= "0001000";
		when "1011" => algarismo(6 downto 0) <= "0000000";
		when "1100" => algarismo(6 downto 0) <= "0110001";
		when "1101" => algarismo(6 downto 0) <= "0000001";
		when "1110" => algarismo(6 downto 0) <= "0110000";
		when "1111" => algarismo(6 downto 0) <= "0111000";
		when others => algarismo(6 downto 0) <= "1111110";
		end case;
	end if;
end process;
end Behavioral;